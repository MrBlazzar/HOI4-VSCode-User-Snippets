{
	"country_event": {
		"prefix": "country_event",
		"body": [
			"country_event = {"
			"\tid = Namespacehere.IDhere"
			"\ttitle = Namespacehere.IDhere.title"
			"\tdesc = Namespacehere.IDhere.desc"
			"\tpicture = GFX_event_picture"
			""
			"\tis_triggered_only = yes"
			"\tfire_only_once = yes"
			""
			"\ttrigger = {}"
			"\tmean_time_to_happen = {"
			"\t\tdays = 2"
			"\t}"
			"}"
		],
		"description": "country event structure"
	},

	"set_variable_long": {
		"prefix": "set_variable",
		"body": [
			"set_variable = {"
			"\tvar = VARIABLENAME"
			"\tvalue = VARIABLEVALUE"
			"}"
		],
		"description": "set variable long structure"
	},

	"set_variable_short": {
		"prefix": "set_variable",
		"body": [
			"set_variable = { VARIABLENAME = VARIABLEVALUE }"
		],
		"description": "set variable short structure"
	},

	"add_to_variable_long": {
		"prefix": "add_to_variable",
		"body": [
			"add_to_variable = {"
			"\tvar = VARIABLENAME"
			"\tvalue = VALUETOADD"
			"}"
		],
		"description": "add to variable long structure"
	},

	"add_to_variable_short": {
		"prefix": "add_to_variable",
		"body": [
			"add_to_variable = { VARIABLENAME = VARIABALETOADD }"
		],
		"description": "add to variable short structure"
	},

	"subtract_from_variable_long": {
		"prefix": "subtract_from_variable",
		"body": [
			"subtract_from_variable = {"
			"\tvar = VARIABLENAME"
			"\tvalue = VARIABALETOSUBTRACT"
			"}"
		],
		"description": "subtract from variable long structure"
	},

	"subtract_from_variable_short": {
		"prefix": "subtract_from_variable",
		"body": [
			"subtract_from_variable = { VARIABLENAME = VARIABALETOSUBTRACT }"
		],
		"description": "subtract from variable short structure"
	},

	"multiply_variable_long": {
		"prefix": "multiply_variable",
		"body": [
			"multiply_variable = {"
			"\tvar = VARIABLENAME"
			"\tvalue = VALUETOMULTIPLE"
			"}"
		],
		"description": "multiply variable long structure"
	},

	"multiply_variable_short": {
		"prefix": "multiply_variable",
		"body": [
			"multiply_variable = { VARIABLENAME = VALUETOMULTIPLE }"
		],
		"description": "multiply variable short structure"
	},

	"divide_variable_long": {
		"prefix": "divide_variable",
		"body": [
			"divide_variable = {"
			"\tvar = VARIABLENAME"
			"\tvalue = VALUETODIVIDE"
			"}"
		],
		"description": "divide variable long structure"
	},

	"divide_variable_short": {
		"prefix": "divide_variable",
		"body": [
			"divide_variable = { VARIABLENAME = VALUETODIVIDE }"
		],
		"description": "divide variable short structure"
	},

	"clear_variable": {
		"prefix": "clear_variable",
		"body": [
			"clear_variable = VARIABLENAME"
		],
		"description": "clear variable structure"
	},

	"clamp_variable": {
		"prefix": "clamp_variable",
		"body": [
			"clamp_variable = {"
			"\tvar = VARIABLENAME"
			"\tmin = VARIABLETOMINAT"
			"\tmax = VARIABLETOMAXAT"
			"}"
		],
		"description": "clamp variable structure"
	},

	"round_variable": {
		"prefix": "round_variable",
		"body": [
			"round_variable = VARIABLENAME"
		],
		"description": "round variable structure"
	},

	"check_variable_compare_long": {
		"prefix": "check_variable",
		"body": [
			"check_variable = {"
			"\tvar = VARIABLENAME"
			"\tvalue = VARIABLETOCOMPARE"
			"\tcompare = less_than/less_than_or_equals/greater_than/greater_than_or_equals/equals/not_equals"
			"}"
		],
		"description": "check variabale structure defaults to greater_than_or_equals if compare is left out"
	},

	"check_variable_compare_short": {
		"prefix": "check_variable",
		"body": [
			"check_variable = { VARIABLENAME =/</> VARIABLETOCOMPARETO }"
		],
		"description": "check variabale short structure >= methods don't work"
	},

	"has_variable": {
		"prefix": "has_variable",
		"body": [
			"has_variable = VARIABLENAME"
		],
		"description": "has variable structure"
	},

	"set_temp_variable_long": {
		"prefix": "set_temp_variable",
		"body": [
			"set_temp_variable = {"
			"\tvar = VARIABLENAME"
			"\tvalue = VARIABLEVALUE"
			"}"
		],
		"description": "set temp variable long structure"
	},

	"set_temp_variable_short": {
		"prefix": "set_temp_variable",
		"body": [
			"set_temp_variable = { VARIABLENAME = VARIABLEVALUE }"
		],
		"description": "set temp variable short structure"
	},

	"add_to_temp_variable_long": {
		"prefix": "add_to_temp_variable",
		"body": [
			"add_to_temp_variable = {"
			"\tvar = VARIABLENAME"
			"\tvalue = VALUETOADD"
			"}"
		],
		"description": "add to temp variable long structure"
	},

	"add_to_temp_variable_short": {
		"prefix": "add_to_temp_variable",
		"body": [
			"add_to_temp_variable = { VARIABLENAME = VARIABALETOADD }"
		],
		"description": "add to temp variable short structure"
	},

	"subtract_from_temp_variable_long": {
		"prefix": "subtract_from_temp_variable",
		"body": [
			"subtract_from_temp_variable = {"
			"\tvar = VARIABLENAME"
			"\tvalue = VARIABALETOSUBTRACT"
			"}"
		],
		"description": "subtract from temp variable long structure"
	},

	"subtract_from_temp_variable_short": {
		"prefix": "subtract_from_temp_variable",
		"body": [
			"subtract_from_temp_variable = { VARIABLENAME = VARIABALETOSUBTRACT }"
		],
		"description": "subtract from temp variable short structure"
	},

	"multiply_variable_long": {
		"prefix": "multiply_temp_variable",
		"body": [
			"multiply_temp_variable = {"
			"\tvar = VARIABLENAME"
			"\tvalue = VALUETOMULTIPLE"
			"}"
		],
		"description": "multiply temp variable long structure"
	},

	"multiply_temp_variable_short": {
		"prefix": "multiply_temp_variable",
		"body": [
			"multiply_temp_variable = { VARIABLENAME = VALUETOMULTIPLE }"
		],
		"description": "multiply temp variable short structure"
	},

	"divide_temp_variable_long": {
		"prefix": "divide_temp_variable",
		"body": [
			"divide_temp_variable = {"
			"\tvar = VARIABLENAME"
			"\tvalue = VALUETODIVIDE"
			"}"
		],
		"description": "divide temp variable long structure"
	},

	"divide_temp_variable_short": {
		"prefix": "divide_temp_variable",
		"body": [
			"divide_temp_variable = { VARIABLENAME = VALUETODIVIDE }"
		],
		"description": "divide temp_ variable short structure"
	},

	"clamp_temp_variable": {
		"prefix": "clamp_temp_variable",
		"body": [
			"clamp_temp_variable = {"
			"\tvar = VARIABLENAME"
			"\tmin = VARIABLETOMINAT"
			"\tmax = VARIABLETOMAXAT"
			"}"
		],
		"description": "clamp temp variable structure"
	},

	"on_actions": {
		"prefix": "on_actions",
		"body": [
			"on_actions = {"
			""
			"}"\t
		],
		"description": "on_actions structure"
	},

	"on_startup": {
		"prefix": "on_startup",
		"body": [
			"on_startup = {"
			"\teffect = {"
			"\t\t"
			"\t}"
			"}"
		],
		"description": "on_startup structure"
	},

	"on_peaceconference_ended": {
		"prefix": "on_peaceconference",
		"body": [
			"on_peaceconference_ended = {"
			"\teffect = {"
			"\t\t"
			"\t}"
			"}"
		],
		"description": "on_peaceconference_ended structure"
	},

	"if": {
		"prefix": "if",
		"body": [
			"if = {"
			"\tlimit = {"
			"\t\t"
			"\t}"
			"}"
		],
		"description": "if structure"
	},

	"else_if": {
		"prefix": "else_if",
		"body": [
			"else_if = {"
			"\tlimit = {"
			"\t\t"
			"\t}"
			"}"
		],
		"description": "else_if structure"
	},

	"every_state": {
		"prefix": "every_state",
		"body": [
			"every_state = {"
			"\tlimit = {"
			"\t\t"
			"\t}"
			"}"
		],
		"description": "every_state structure"
	},

	"every_owned_state": {
		"prefix": "every_owned_state",
		"body": [
			"every_owned_state = {"
			"\tlimit = {"
			"\t\t"
			"\t}"
			"}"
		],
		"description": "every_owned_state structure"
	},

	"option": {
		"prefix": "option",
		"body": [
			"option = {"
			"\tname = Namespacehere.IDHere.optionletterhere"
			"}"
		],
		"description": "option structure"
	},

	"immediate": {
		"prefix": "immediate",
		"body": [
			"immediate = {"
			"\t"
			"}"
		],
		"description": "immediate structure"
	},

	"relative_position": {
		"prefix": "relative_position",
		"body": "relative_position_id = "
		"description": "relative position id structure"
	},

	"focus": {
		"prefix": "focus",
		"body": [
			"focus = {"
			"\tid = focus_id_goes_here"
			"\ticon = icon_goes_here"
			"\tcost = 10"
			"\tx = 0"
			"\ty = 0"
			"\tavailable = {}"
			"\tbypass = {}"
			"\tallow_branch = {}"
			"\tprerequisite = {"
			"\t\tfocus = prereq_focus_here_more_lines_for_more_of_them"
			"\t}"
			"\tmutually_exclusive = {"
			"\t\tfocus = mutual_exclusive_goes_here"
			"\t}"
			"\trelative_position_id = focus_id_for_relative_goes_here"
			"\tai_will_do = {"
			"\t\t"
			"\t}"
			""
			"\tcompletion_reward = {"
			"\t\t"
			"\t}"
			"}"
		],
		"description": "Focus structure"
	},

	"idea": {
		"prefix": "idea_block",
		"body": [
			"IDEA_ID_GOES_HERE = {"
			"\tallowed = {"
			"\t\talways = no"
			"\t}"
			""
			"\tallowed_civil_war = {"
			"\t\talways = yes"
			"\t}"
			""
			"\tremoval_cost = -1"
			""
			"\tpicture = PICTURE_ID_GOES_HERE"
			"on_add = {"
			"\t"
			"}"
			""
			"on_remove = {"
			"\t"
			"}"
			""
			"\tmodifier = {"
			"\t\t"
			"\t}"
			"}"
		],
		"description": "idea structure"
	},

	"hidden effect": {
		"prefix": "hidden_effect",
		"body": [
			"hidden_effect = {"
			"\t"
			"}"
		],
		"description": "hidden_effect structure"
	},

	"news_event": {
		"prefix": "news_event",
		"body": [
			"news_event = {"
			"\tid = Namespacehere.IDhere"
			"\ttitle = Namespacehere.IDhere.t"
			"\tdesc = Namespacehere.IDhere.d"
			"\tpicture = GFX_event_picture"
			"\tis_triggered_only = yes"
			"\tfire_only_once = yes"
			""
			"\ttrigger = {}"
			"\tmean_time_to_happen = {"
			"\t\tdays = 2"
			"\t}"
			"}"
		],
		"description": "news event structure"
	},

	"completion_reward": {
		"prefix": "completion_reward",
		"body": [
			"completion_reward = {"
			"\t"
			"}"
		],
		"description": "completion reward structure"
	},

	"swap_ideas": {
		"prefix": "swap_ideas",
		"body": [
			"swap_ideas = {"
			"\tremove_idea = IDEANAMEID"
			"\tadd_idea = IDEANAMEID"
			"}"
		],
		"description": "swap ideas structure"
	},

	"add_timed_idea": {
		"prefix": "add_timed_idea",
		"body": "add_timed_idea = { idea = IDEAIDNAME days = DAYS }"
		"description": "add timed idea structure"
	}

	"spriteType": {
		"prefix": "spriteType",
		"body": [
			"spriteType = {"
			"\tname = \"GFX_NAMEOFGFXHERE\""
			"\ttextureFile = \"directorytofileincludingfilenameandextension\""
			"\teffectFile = \"gfx/FX/buttonstate_nodowneffect.lua\"//unless we actually need a effect usually none needed"
			"}"
		],
		"description": "spriteType structure"
	},

	"add_tech_bonus": {
		"prefix": "add_tech_bonus",
		"body": [
			"add_tech_bonus = {"
			"\tname = NAMEFORLOCNOTUSUALLYUSED"
			"\tuses = NUMBEROFUSES"
			"\tbonus = BONUS0.01-1"
			"\tahead_reduction = AHEADREDUCTION0.01-1"
			"\ttechnology = TECHID"
			"\tcategory = CATEGORYID"
			"}"
		],
		"description": "add tech bonus structure"
	},

	"equipment_bonus": {
		"prefix": "equipment_bonus",
		"body": [
			"equipment_bonus = {"
			"\tequipmentname = {"
			"\t\t#BONUSESHERE"
			"\t\tinstant = yes"
			"\t}"
			"}"
		],
		"description": "equipment bonus structure"
	},

	"defined_text": {
		"prefix": "defined_text",
		"body": [
			"defined_text = {"
			"\tname = NAMEFORLOCTEXTHEREBRO"
			"\ttext = {"
			"\t\ttrigger = {"
			"\t\t\t"
			"\t\t}"
			"\t\tlocalization_key = LOCKEYHERESURROUNDEDBYQUOTES"
			"\t}"
			"\ttext = {"
			"\t\ttrigger = {"
			"\t\t\t"
			"\t\t}"
			"\t\tlocalization_key = LOCKEYHERESURROUNDEDBYQUOTES"
			"\t}"
			"}"
		],
		"description": "structure for defined_text"
	},

	"shared_focus": {
		"prefix": "shared_focus",
		"body": [
			"shared_focus = {"
			"\tid = focus_id_goes_here"
			"\ticon = icon_goes_here"
			"\tcost = 10"
			"\tx = 0"
			"\ty = 0"
			"\tavailable = {}"
			"\tbypass = {}"
			"\tallow_branch = {}"
			"\tprerequisite = {"
			"\t\tfocus = prereq_focus_here_more_lines_for_more_of_them"
			"\t}"
			"\tmutually_exclusive = {"
			"\t\tfocus = mutual_exclusive_goes_here"
			"\t}"
			"\trelative_position_id = focus_id_for_relative_goes_here"
			""
			"\tcompletion_reward = {"
			"\t\t"
			"\t}"
			"}"
		],
		"description": "shared_focus structure"
	},

	"entity": {
		"prefix": "entity",
		"body": [
			"entity = {"
			"\tname = putnameofentityinquotes"
			"\tpdxmesh = putnameofmeshinquotes"
			"}"
		],
		"description": "entyt structure"
	},

	"pdxmesh": {
		"prefix": "pdxmesh",
		"body": [
			"pdxmesh = {"
			"\tname = nameofmeshinquotes"
			"\tfile = gfx/models/static_mapobjects/"
			""
			"\tmeshsettings = {"
			"\t\ttexture_diffuse = nameofdiffusetextureinquotes.dds"
			"\t\ttexture_normal = nameofnormaltextureinquotes.dds"
			"\t\ttexture_specular = nameofpseculartextureinquotes.dds"
			"\t}"
			""
			"\tscale = 1.0"
			""
			"\tcull_distance = 700.0f"
			"}"
		],
		"description": "pdxmesh structure"
	},

	"type": {
		"prefix": "type",
		"body": [
			"type={"
			"\ttype=typeinquotes"
			"\tuse_animation=no"
			"\tscale=1.000000"
			"\talways_visible=yes"
			"\tobject={"
			"\t\tname=objectnameinquotes"
			"\t\tposition={"
			"\t\t\t1864.000 12.000 981.000"
			"\t\t}"
			"\t\trotation={"
			"\t\t\t0.000 0.000 0.000"
			"\t\t}"
			"\t}"
			"}"
		],
		"description": "type for static objects structure"
	},

	"state_building": {
		"prefix": "state_shared_building",
		"body": [
			"STATE_ID = {"
			"\tif = {"
			"\t\tlimit = {"
			"\t\t\tis_owned_and_controlled_by = ROOT"
			"\t\t\tfree_building_slots = {"
			"\t\t\t\tbuilding = BUILDING_TYPE"
			"\t\t\t\tsize > 0"
			"\t\t\t\tinclude_locked = yes"
			"\t\t\t}"
			"\t\t}"
			"\t\tadd_extra_state_shared_building_slots = NUM_SLOTS"
			"\t\tadd_building_construction = {"
			"\t\t\ttype = BUILDING_TYPE"
			"\t\t\tlevel = NUM_SLOTS"
			"\t\t\tinstant_build = yes"
			"\t\t}"
			"\t}"
			"}"
		],
		"description": "structure for state shared buildings"
	},

	"add_to_array_short": {
		"prefix": "add_to_array",
		"body": [
			"add_to_array = { <name> = <value> }"
		],
		"description": "add to array short structure"
	},

	"add_to_array_long": {
		"prefix": "add_to_array",
		"body": [
			"add_to_array = {"
			"\tarray = <array_name>"
			"\tvalue = <value>"
			"\tindex = <index_optional>"
			"}"
		],
		"description": "add to array long structure"
	},

	"remove_from_array": {
		"prefix": "remove_from_array",
		"body": [
			"remove_from_array = {"
			"\tarray = <array_name>"
			"\tvalue = <value>"
			"\tindex = <index_optional>"
			"}"
		],
		"description": "remove from array structure"
	},

	"clear_array": {
		"prefix": "clear_array",
		"body": [
			"clear_array = <array_name>"
		],
		"description": "clears the array"
	},

	"resize_array": {
		"prefix": "resize_Array",
		"body": [
			"resize_array = {"
			"\tarray = <array_name>"
			"\tvalue = <value>"
			"\tsize = <int>"
			"}"
		],
		"description": "resize the array"
	},

	"for_loop_effect": {
		"prefix": "for_loop_effect",
		"body": [
			"for_loop = {"
			"\tstart = 0 #start value of loop"
			"\tend = 10 #end value of loop"
			"\tcompare_type = less_than_or_equals #(default less_than) comparison type between start and end val"
			"\tadd = 3 #default 1 value to add to current value after each iteration"
			"\tvalue = value_name #optional (default 'v') current value of iteration will be stored in this temp variable"
			"\break = break_name #optional (default 'break') set this temp variable to non zero to break the loop"
			"\t#effects"
			"}"
		],
		"description": "for loop effect structure"
	},

	"while_loop_effect": {
		"prefix": "while_loop_effect",
		"body": [
			"while_effect = {"
			"\tlimit = {}"
			"\tbreak = break_name #optional (default 'break') set this temp variable to non zero to break the loop"
			"\t#effects"
			"}"
		],
		"description": "while loop effect structure"
	},

	"for_each_loop": {
		"prefix": "for_each_loop",
		"body": [
			"for_each_loop = {"
			"\tarray = <name>"
			"\tvalue = <string>"
			"\tindex = <string>"
			"\tbreak = <string>"
			"\t"
			"\t<effects>"
			"}"
		],
		"description": "for each loop structure"
	},

	"for_each_scope_loop": {
		"prefix": "for_each_scope_loop",
		"body": [
			"for_each_scope_loop = {"
			"\tarray = <name>"
			"\tbreak = <string>"
			"\t"
			"\t<effects>"
			"}"
		],
		"description": "for each scope loop structure"
	},

	"random_scope_in_array": {
		"prefix": "random_scope_in_array",
		"body": [
			"random_scope_in_array = {"
			"\tarray = <name>"
			"\tbreak = <string>"
			"\tlimit = { <triggers> }"
			"\t"
			"\t<effects>"
			"}"
		],
		"description": "random scope in array structure"
	},

	"add_to_temp_array_short": {
		"prefix": "add_to_temp_array",
		"body": [
			"add_to_temp_array = { <name> = <value> }"
		],
		"description": "add to temp array short structure"
	},

	"add_to_temp_array_long": {
		"prefix": "add_to_temp_array",
		"body": [
			"add_to_temp_array = {"
			"\tarray = <array_name>"
			"\tvalue = <value>"
			"\tindex = <index_optional>"
			"}"
		],
		"description": "add to temp array long structure"
	},

	"remove_from_temp_array": {
		"prefix": "remove_from_temp_array",
		"body": [
			"remove_from_temp_array = {"
			"\tarray = <array_name>"
			"\tvalue = <value>"
			"\tindex = <index_optional>"
			"}"
		],
		"description": "remove temp from array structure"
	},

	"clear_temp_array": {
		"prefix": "clear_temp_array",
		"body": [
			"clear_temp_array = <array_name>"
		],
		"description": "clears the temp array"
	},

	"resize_temp_array": {
		"prefix": "resize_temp_array",
		"body": [
			"resize_temp_array = {"
			"\tarray = <array_name>"
			"\tvalue = <value>"
			"\tsize = <int>"
			"}"
		],
		"description": "resize the temp array"
	},

	"is_in_array": {
		"prefix": "is_in_array",
		"body": [
			"is_in_array = {"
			"\tarray = <name>"
			"\tvalue = <value>"
			"}"
		],
		"description": "is in array structure"
	},

	"any_of": {
		"prefix": "any_of",
		"body": [
			"any_of = {"
			"\tarray = <name>"
			"\tvalue = <string>"
			"\tindex = <string>"
			"\t"
			"\t<triggers>"
			"],"
		],
		"description": "any of structure"
	},

	"all_of": {
		"prefix": "all_of",
		"body": [
			"all_of = {"
			"\tarray = <name>"
			"\tvalue = <string>"
			"\tindex = <string>"
			"\t"
			"\t<triggers>"
			"}"
		],
		"description": "all of structure"
	},

	"any_of_scopes": {
		"prefix": "any_of_scopes",
		"body": [
			"any_of_scopes = {"
			"\tarray = <name>"
			"\t"
			"\t<triggers>"
			"}"
		],
		"description": "any of scopes structure"
	},

	"all_of_scopes": {
		"prefix": "all_of_scopes",
		"body": [
			"all_of_scopes = {"
			"\tarray = <name>"
			"\t"
			"\t<triggers>"
			"}"
		],
		"description": "all of scopes structure"
	},

	"text": {
		"prefix": "text",
		"body": [
			"text = {"
			"\ttrigger = {"
			"\t\t<trigger>"
			"\t}"
			"\tlocalization_key = <loc_key>"
			"}"
		],
		"description": "text for scripted loc structure"
	},

	"has_game_rule": {
		"prefix": "has_game_rule",
		"body": [
			"has_game_rule = {"
			"\trule = RULE_NAME_BRO"
			"\toption = OPTION_NAME_BRO"
			"}"
		],
		"description": "has_game_rule structure"
	},

	"desc": {
		"prefix": "desc",
		"body": [
			"desc = {"
			"\ttext = put_text_name_here"
			"\ttrigger = {"
			"\t\t#Trigger-goes-here"
			"\t}"
			"}"
		],
		"description": "desc structure"
	},

	"free_building_slots": {
		"prefix": "free_building_slots",
		"body": [
			"free_building_slots = {"
			"\tbuilding = building_type"
			"\tsize >/< number"
			"\tinclude_locked = yes/no"
			"}"
		],
		"description": "free_building_slots structure"
	},

	"add_building_construction": {
		"prefix": "add_building_construction",
		"body": [
			"add_building_construction = {"
			"\ttype = building_type"
			"\tlevel = number"
			"\tinstant_build = yes/no"
			"}"
		],
		"description": "add_building_construction structure"
	},

	"meta_effect": {
		"prefix": "meta_effect",
		"body": [
			"meta_effect = {"
			"\ttext = {"
			"\t\t#effects"
			"\t}"
			"\t#STUFF"
			"}"
		],
		"description": "meta_effect structure"
	},

	"meta_trigger": {
		"prefix": "meta_trigger",
		"body": [
			"meta_trigger = {"
			"\ttext = {"
			"\t\t#trigger"
			"\t}"
			"\t#stuff"
			"}"
		],
		"description": "meta_trigger structure"
	},

	"character_block_non_instance": {
		"prefix": "character_block_non_instance",
		"body": [
			"name = name_loc_string"
			"portraits = {"
			"\tarmy = {"
			"\t\tlarge = gfx_sprite_type_name_or_file_path"
			"\t\tsmall = gfx_sprite_type_name_or_file_path"
			"\t}"
			"\tcivilian = {"
			"\t\tlarge = gfx_sprite_type_name_or_file_path"
			"\t}"
			"}"
			"country_leader = {"
			"\tdesc = description_loc_string"
			"\tideology = subideolog_here"
			"\ttraits = {"
			"\t\t#traits_here"
			"\t}"
			"\texpire = \"year.month.day.hour\""
			"\tid = -1"
			"}"
			"advisor = {"
			"\tslot = air_chief/army_chief/navy_chief/cultural_advisor/economic_advisor/political_advisor"
			"\tidea_token = name_loc_string_slot_type"
			"\tledger = air/army/navy"
			"\tallowed = {"
			"\t\t#Allow_trigger"
			"\t}"
			"\t\tavailable = {"
			"\t\t\t#available_trigger"
			"\t\t}"
			"\t\tvisible = {"
			"\t\t\t#visible_trigger"
			"\t\t}"
			"\tmodifier = {"
			"\t\t#modifier_effects"
			"\t}"
			"\ttraits = {"
			"\t\t#traits_here"
			"\t}"
			"\tcost = 100"
			"\tai_will_do = {"
			"\t\tfactor = 10"
			"\t}"
			"}"
			"corps_commander = {"
			"\tvisible = {"
			"\t\t#visible_triggers"
			"\t}"
			"\tskill = 1"
			"\tattack_skill = 1"
			"\tdefense_skill = 1"
			"\tplanning_skill = 1"
			"\tlogistics_skill = 1"
			"\tlegacy_id = -1"
			"}"
		],
		"description": "character_block_non_instance structure"
	},

	"character_block_instance": {
		"prefix": "character_block_instance",
		"body": [
			"instance = {"
			"\tallowed = {"
			"\t\thas_dlc = \"DLC Name Here\""
			"\t}"
			"\tname = name_loc_string"
			"\tportraits = {"
			"\t\tarmy = {"
			"\t\t\tlarge = gfx_sprite_type_name_or_file_path"
			"\t\t\tsmall = gfx_sprite_type_name_or_file_path"
			"\t\t}"
			"\t\tcivilian = {"
			"\t\t\tlarge = gfx_sprite_type_name_or_file_path"
			"\t\t}"
			"\t}"
			"\tcountry_leader = {"
			"\t\tdesc = description_loc_string"
			"\t\tideology = subideolog_here"
			"\t\ttraits = {"
			"\t\t\t#traits_here"
			"\t\t}"
			"\t\texpire = \"year.month.day.hour\""
			"\t\tid = -1"
			"\t}"
			"\tadvisor = {"
			"\t\tslot = air_chief/army_chief/navy_chief/cultural_advisor/economic_advisor/political_advisor"
			"\t\tidea_token = name_loc_string_slot_type"
			"\t\tledger = air/army/navy"
			"\t\tallowed = {"
			"\t\t\t#Allow_trigger"
			"\t\t}"
			"\t\tavailable = {"
			"\t\t\t#available_trigger"
			"\t\t}"
			"\t\tvisible = {"
			"\t\t\t#visible_trigger"
			"\t\t}"
			"\t\tmodifier = {"
			"\t\t\t#modifier_effects"
			"\t\t}"
			"\t\ttraits = {"
			"\t\t\t#traits_here"
			"\t\t}"
			"\t\tcost = 100"
			"\t\tai_will_do = {"
			"\t\t\tfactor = 10"
			"\t\t}"
			"\t}"
			"\tcorps_commander = {"
			"\tvisible = {"
			"\t\t#visible_triggers"
			"\t}"
			"\t\tskill = 1"
			"\t\tattack_skill = 1"
			"\t\tdefense_skill = 1"
			"\t\tplanning_skill = 1"
			"\t\tlogistics_skill = 1"
			"\t\tlegacy_id = -1"
			"\t}"
			"}"
		],
		"description": "character_block_instance_instance structure"
	},

	"character_advisor_block": {
		"prefix": "character_advisor_block",
		"body": [
			"advisor = {"
			"\tslot = air_chief/army_chief/navy_chief/cultural_advisor/economic_advisor/political_advisor"
			"\tidea_token = name_loc_string_slot_type"
			"\tledger = air/army/navy"
			"\tallowed = {"
			"\t\t#Allow_trigger"
			"\t}"
			"\t\tavailable = {"
			"\t\t\t#available_trigger"
			"\t\t}"
			"\t\tvisible = {"
			"\t\t\t#visible_trigger"
			"\t\t}"
			"\tmodifier = {"
			"\t\t#modifier_effects"
			"\t}"
			"\ttraits = {"
			"\t\t#traits_here"
			"\t}"
			"\tcost = 100"
			"\tai_will_do = {"
			"\t\tfactor = 10"
			"\t}"
			"}"
		],
		"description": "character_advisor_block structure"
	},

	"character_corps_commander_block": {
		"prefix": "character_corps_commander_block",
		"body": [
			"corps_commander = {"
			"\tvisible = {"
			"\t\t#visible_triggers"
			"\t}"
			"\tskill = 1"
			"\tattack_skill = 1"
			"\tdefense_skill = 1"
			"\tplanning_skill = 1"
			"\tlogistics_skill = 1"
			"\tlegacy_id = -1"
			"}"
		],
		"description": "character_corps_commander_block structure"
	},

	"character_portrait_block": {
		"prefix": "character_portrait_block",
		"body": [
			"portraits = {"
			"\tarmy = {"
			"\t\tlarge = gfx_sprite_type_name_or_file_path"
			"\t\tsmall = gfx_sprite_type_name_or_file_path"
			"\t}"
			"\tcivilian = {"
			"\t\tlarge = gfx_sprite_type_name_or_file_path"
			"\t}"
			"}"
		],
		"description": "character_portrait_block structure"
	},

	"character_country_leader_block": {
		"prefix": "character_country_leader_block",
		"body": [
			"country_leader = {"
			"\tdesc = description_loc_string"
			"\tideology = subideolog_here"
			"\ttraits = {"
			"\t\t#traits_here"
			"\t}"
			"\texpire = \"year.month.day.hour\""
			"\tid = -1"
			"}"
		],
		"description": "character_country_leader_block structure"
	},

	"character_name_block": {
		"prefix": "character_name_block",
		"body": [
			"name = name_loc_string"
		],
		"description": "character_name_block structure"
	}
}
